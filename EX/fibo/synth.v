/* Generated by Yosys 0.9+4081 (git sha1 8cfed1a9, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os) */

(* src = "alu.v:1.1-13.10" *)
module alu(a, b, op, result);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  (* src = "alu.v:1.25-1.26" *)
  input [15:0] a;
  (* src = "alu.v:1.28-1.29" *)
  input [15:0] b;
  (* src = "alu.v:1.43-1.45" *)
  input [2:0] op;
  (* src = "alu.v:1.61-1.67" *)
  output [15:0] result;
  assign _242_ = a[0] | b[0];
  assign _243_ = a[0] & b[0];
  assign _244_ = _242_ & ~(_243_);
  assign _245_ = ~op[2];
  assign _246_ = op[0] | ~(op[1]);
  assign _247_ = _245_ & ~(_246_);
  assign _248_ = ~(op[1] & op[0]);
  assign _249_ = _248_ | _245_;
  assign _250_ = _245_ & ~(_248_);
  assign _251_ = _250_ | ~(_249_);
  assign _252_ = ~(_251_ | _247_);
  assign _253_ = a[0] & ~(_249_);
  assign _254_ = _250_ & _242_;
  assign _255_ = _254_ | _253_;
  assign _256_ = _247_ & _243_;
  assign _257_ = _256_ | _255_;
  assign result[0] = _252_ ? _244_ : _257_;
  assign _258_ = ~b[1];
  assign _259_ = op[1] | ~(op[0]);
  assign _260_ = _245_ & ~(_259_);
  assign _261_ = ~(b[0] ^ b[1]);
  assign _262_ = _260_ ? _258_ : _261_;
  assign _263_ = _262_ ^ a[1];
  assign _264_ = b[0] & ~(a[0]);
  assign _265_ = ~(_264_ ^ _263_);
  assign _266_ = a[1] & ~(_249_);
  assign _267_ = ~(a[1] | b[1]);
  assign _268_ = _250_ & ~(_267_);
  assign _269_ = _268_ | _266_;
  assign _270_ = ~(a[1] & b[1]);
  assign _271_ = _247_ & ~(_270_);
  assign _272_ = _271_ | _269_;
  assign result[1] = _252_ ? _265_ : _272_;
  assign _273_ = ~a[2];
  assign _274_ = ~b[2];
  assign _275_ = ~(b[0] | b[1]);
  assign _276_ = _275_ ^ b[2];
  assign _277_ = _260_ ? _274_ : _276_;
  assign _278_ = _277_ ^ _273_;
  assign _279_ = _262_ & a[1];
  assign _280_ = _263_ & ~(_264_);
  assign _281_ = _280_ | _279_;
  assign _282_ = ~(_281_ ^ _278_);
  assign _283_ = a[2] & ~(_249_);
  assign _284_ = ~(a[2] | b[2]);
  assign _285_ = _250_ & ~(_284_);
  assign _286_ = _285_ | _283_;
  assign _287_ = ~(a[2] & b[2]);
  assign _000_ = _247_ & ~(_287_);
  assign _001_ = _000_ | _286_;
  assign result[2] = _252_ ? _282_ : _001_;
  assign _002_ = ~b[3];
  assign _003_ = _275_ & ~(b[2]);
  assign _004_ = _003_ ^ b[3];
  assign _005_ = _260_ ? _002_ : _004_;
  assign _006_ = ~(_005_ ^ a[3]);
  assign _007_ = ~(_277_ & a[2]);
  assign _008_ = _281_ & ~(_278_);
  assign _009_ = _007_ & ~(_008_);
  assign _010_ = _009_ ^ _006_;
  assign _011_ = a[3] & ~(_249_);
  assign _012_ = ~(a[3] | b[3]);
  assign _013_ = _250_ & ~(_012_);
  assign _014_ = _013_ | _011_;
  assign _015_ = ~(a[3] & b[3]);
  assign _016_ = _247_ & ~(_015_);
  assign _017_ = _016_ | _014_;
  assign result[3] = _252_ ? _010_ : _017_;
  assign _018_ = ~a[4];
  assign _019_ = ~b[4];
  assign _020_ = b[3] | b[2];
  assign _021_ = _275_ & ~(_020_);
  assign _022_ = _021_ ^ b[4];
  assign _023_ = _260_ ? _019_ : _022_;
  assign _024_ = _023_ ^ _018_;
  assign _025_ = _005_ & a[3];
  assign _026_ = ~(_007_ | _006_);
  assign _027_ = _026_ | _025_;
  assign _028_ = _006_ | _278_;
  assign _029_ = _281_ & ~(_028_);
  assign _030_ = _029_ | _027_;
  assign _031_ = ~(_030_ ^ _024_);
  assign _032_ = a[4] & ~(_249_);
  assign _033_ = ~(a[4] | b[4]);
  assign _034_ = _250_ & ~(_033_);
  assign _035_ = _034_ | _032_;
  assign _036_ = ~(a[4] & b[4]);
  assign _037_ = _247_ & ~(_036_);
  assign _038_ = _037_ | _035_;
  assign result[4] = _252_ ? _031_ : _038_;
  assign _039_ = ~b[5];
  assign _040_ = _021_ & ~(b[4]);
  assign _041_ = _040_ ^ _039_;
  assign _042_ = _260_ ? b[5] : _041_;
  assign _043_ = _042_ ^ a[5];
  assign _044_ = ~(_023_ & a[4]);
  assign _045_ = _030_ & ~(_024_);
  assign _046_ = _044_ & ~(_045_);
  assign _047_ = _046_ ^ _043_;
  assign _048_ = a[5] & ~(_249_);
  assign _049_ = ~(a[5] | b[5]);
  assign _050_ = _250_ & ~(_049_);
  assign _051_ = _050_ | _048_;
  assign _052_ = ~(a[5] & b[5]);
  assign _053_ = _247_ & ~(_052_);
  assign _054_ = _053_ | _051_;
  assign result[5] = _252_ ? _047_ : _054_;
  assign _055_ = ~b[6];
  assign _056_ = b[5] | b[4];
  assign _057_ = _021_ & ~(_056_);
  assign _058_ = _057_ ^ b[6];
  assign _059_ = _260_ ? _055_ : _058_;
  assign _060_ = ~(_059_ ^ a[6]);
  assign _061_ = a[5] & ~(_042_);
  assign _062_ = ~(_044_ | _043_);
  assign _063_ = _062_ | _061_;
  assign _064_ = _043_ | _024_;
  assign _065_ = _064_ | ~(_030_);
  assign _066_ = _065_ & ~(_063_);
  assign _067_ = _066_ ^ _060_;
  assign _068_ = a[6] & ~(_249_);
  assign _069_ = ~(a[6] | b[6]);
  assign _070_ = _250_ & ~(_069_);
  assign _071_ = _070_ | _068_;
  assign _072_ = ~(a[6] & b[6]);
  assign _073_ = _247_ & ~(_072_);
  assign _074_ = _073_ | _071_;
  assign result[6] = _252_ ? _067_ : _074_;
  assign _075_ = ~b[7];
  assign _076_ = _057_ & ~(b[6]);
  assign _077_ = _076_ ^ _075_;
  assign _078_ = _260_ ? b[7] : _077_;
  assign _079_ = _078_ ^ a[7];
  assign _080_ = ~(_059_ & a[6]);
  assign _081_ = ~(_066_ | _060_);
  assign _082_ = _080_ & ~(_081_);
  assign _083_ = _082_ ^ _079_;
  assign _084_ = a[7] & ~(_249_);
  assign _085_ = ~(a[7] | b[7]);
  assign _086_ = _250_ & ~(_085_);
  assign _087_ = _086_ | _084_;
  assign _088_ = ~(a[7] & b[7]);
  assign _089_ = _247_ & ~(_088_);
  assign _090_ = _089_ | _087_;
  assign result[7] = _252_ ? _083_ : _090_;
  assign _091_ = ~b[8];
  assign _092_ = b[7] | b[6];
  assign _093_ = _092_ | _056_;
  assign _094_ = _021_ & ~(_093_);
  assign _095_ = _094_ ^ b[8];
  assign _096_ = _260_ ? _091_ : _095_;
  assign _097_ = ~(_096_ ^ a[8]);
  assign _098_ = a[7] & ~(_078_);
  assign _099_ = ~(_080_ | _079_);
  assign _100_ = ~(_099_ | _098_);
  assign _101_ = _079_ | _060_;
  assign _102_ = _063_ & ~(_101_);
  assign _103_ = _100_ & ~(_102_);
  assign _104_ = _101_ | _064_;
  assign _105_ = _030_ & ~(_104_);
  assign _106_ = _105_ | ~(_103_);
  assign _107_ = ~(_106_ ^ _097_);
  assign _108_ = a[8] & ~(_249_);
  assign _109_ = ~(a[8] | b[8]);
  assign _110_ = _250_ & ~(_109_);
  assign _111_ = _110_ | _108_;
  assign _112_ = ~(a[8] & b[8]);
  assign _113_ = _247_ & ~(_112_);
  assign _114_ = _113_ | _111_;
  assign result[8] = _252_ ? _107_ : _114_;
  assign _115_ = ~b[9];
  assign _116_ = _094_ & ~(b[8]);
  assign _117_ = _116_ ^ b[9];
  assign _118_ = _260_ ? _115_ : _117_;
  assign _119_ = ~(_118_ ^ a[9]);
  assign _120_ = ~(_096_ & a[8]);
  assign _121_ = _106_ & ~(_097_);
  assign _122_ = _120_ & ~(_121_);
  assign _123_ = _122_ ^ _119_;
  assign _124_ = a[9] & ~(_249_);
  assign _125_ = ~(a[9] | b[9]);
  assign _126_ = _250_ & ~(_125_);
  assign _127_ = _126_ | _124_;
  assign _128_ = ~(a[9] & b[9]);
  assign _129_ = _247_ & ~(_128_);
  assign _130_ = _129_ | _127_;
  assign result[9] = _252_ ? _123_ : _130_;
  assign _131_ = ~b[10];
  assign _132_ = b[9] | b[8];
  assign _133_ = _094_ & ~(_132_);
  assign _134_ = _133_ ^ b[10];
  assign _135_ = _260_ ? _131_ : _134_;
  assign _136_ = ~(_135_ ^ a[10]);
  assign _137_ = _118_ & a[9];
  assign _138_ = ~(_120_ | _119_);
  assign _139_ = _138_ | _137_;
  assign _140_ = _119_ | _097_;
  assign _141_ = _140_ | ~(_106_);
  assign _142_ = _141_ & ~(_139_);
  assign _143_ = _142_ ^ _136_;
  assign _144_ = a[10] & ~(_249_);
  assign _145_ = ~(a[10] | b[10]);
  assign _146_ = _250_ & ~(_145_);
  assign _147_ = _146_ | _144_;
  assign _148_ = ~(a[10] & b[10]);
  assign _149_ = _247_ & ~(_148_);
  assign _150_ = _149_ | _147_;
  assign result[10] = _252_ ? _143_ : _150_;
  assign _151_ = ~b[11];
  assign _152_ = _133_ & ~(b[10]);
  assign _153_ = _152_ ^ b[11];
  assign _154_ = _260_ ? _151_ : _153_;
  assign _155_ = ~(_154_ ^ a[11]);
  assign _156_ = ~(_135_ & a[10]);
  assign _157_ = ~(_142_ | _136_);
  assign _158_ = _156_ & ~(_157_);
  assign _159_ = _158_ ^ _155_;
  assign _160_ = a[11] & ~(_249_);
  assign _161_ = ~(a[11] | b[11]);
  assign _162_ = _250_ & ~(_161_);
  assign _163_ = _162_ | _160_;
  assign _164_ = ~(a[11] & b[11]);
  assign _165_ = _247_ & ~(_164_);
  assign _166_ = _165_ | _163_;
  assign result[11] = _252_ ? _159_ : _166_;
  assign _167_ = ~b[12];
  assign _168_ = b[11] | b[10];
  assign _169_ = _168_ | _132_;
  assign _170_ = _094_ & ~(_169_);
  assign _171_ = _170_ ^ b[12];
  assign _172_ = _260_ ? _167_ : _171_;
  assign _173_ = ~(_172_ ^ a[12]);
  assign _174_ = ~(_154_ & a[11]);
  assign _175_ = ~(_156_ | _155_);
  assign _176_ = _174_ & ~(_175_);
  assign _177_ = _155_ | _136_;
  assign _178_ = _139_ & ~(_177_);
  assign _179_ = _176_ & ~(_178_);
  assign _180_ = _177_ | _140_;
  assign _181_ = _106_ & ~(_180_);
  assign _182_ = _179_ & ~(_181_);
  assign _183_ = _182_ ^ _173_;
  assign _184_ = a[12] & ~(_249_);
  assign _185_ = ~(a[12] | b[12]);
  assign _186_ = _250_ & ~(_185_);
  assign _187_ = _186_ | _184_;
  assign _188_ = ~(a[12] & b[12]);
  assign _189_ = _247_ & ~(_188_);
  assign _190_ = _189_ | _187_;
  assign result[12] = _252_ ? _183_ : _190_;
  assign _191_ = ~b[13];
  assign _192_ = _170_ & ~(b[12]);
  assign _193_ = _192_ ^ b[13];
  assign _194_ = _260_ ? _191_ : _193_;
  assign _195_ = ~(_194_ ^ a[13]);
  assign _196_ = ~(_172_ & a[12]);
  assign _197_ = ~(_182_ | _173_);
  assign _198_ = _196_ & ~(_197_);
  assign _199_ = _198_ ^ _195_;
  assign _200_ = a[13] & ~(_249_);
  assign _201_ = ~(a[13] | b[13]);
  assign _202_ = _250_ & ~(_201_);
  assign _203_ = _202_ | _200_;
  assign _204_ = ~(a[13] & b[13]);
  assign _205_ = _247_ & ~(_204_);
  assign _206_ = _205_ | _203_;
  assign result[13] = _252_ ? _199_ : _206_;
  assign _207_ = ~b[14];
  assign _208_ = b[13] | b[12];
  assign _209_ = _170_ & ~(_208_);
  assign _210_ = _209_ ^ b[14];
  assign _211_ = _260_ ? _207_ : _210_;
  assign _212_ = ~(_211_ ^ a[14]);
  assign _213_ = ~(_194_ & a[13]);
  assign _214_ = ~(_196_ | _195_);
  assign _215_ = _213_ & ~(_214_);
  assign _216_ = _195_ | _173_;
  assign _217_ = ~(_216_ | _182_);
  assign _218_ = _215_ & ~(_217_);
  assign _219_ = _218_ ^ _212_;
  assign _220_ = a[14] & ~(_249_);
  assign _221_ = ~(a[14] | b[14]);
  assign _222_ = _250_ & ~(_221_);
  assign _223_ = _222_ | _220_;
  assign _224_ = ~(a[14] & b[14]);
  assign _225_ = _247_ & ~(_224_);
  assign _226_ = _225_ | _223_;
  assign result[14] = _252_ ? _219_ : _226_;
  assign _227_ = ~(_209_ & _207_);
  assign _228_ = _227_ ^ b[15];
  assign _229_ = _260_ ? b[15] : _228_;
  assign _230_ = _229_ ^ a[15];
  assign _231_ = ~(_211_ & a[14]);
  assign _232_ = ~(_218_ | _212_);
  assign _233_ = _231_ & ~(_232_);
  assign _234_ = _233_ ^ _230_;
  assign _235_ = a[15] & ~(_249_);
  assign _236_ = ~(a[15] | b[15]);
  assign _237_ = _250_ & ~(_236_);
  assign _238_ = _237_ | _235_;
  assign _239_ = ~(a[15] & b[15]);
  assign _240_ = _247_ & ~(_239_);
  assign _241_ = _240_ | _238_;
  assign result[15] = _252_ ? _234_ : _241_;
endmodule

(* src = "dec.v:1.1-8.10" *)
module dec(o, aradr, bradr, op, wadr, we, halt);
  (* src = "dec.v:1.47-1.52" *)
  output [1:0] aradr;
  (* src = "dec.v:1.54-1.59" *)
  output [1:0] bradr;
  (* src = "dec.v:1.120-1.124" *)
  output halt;
  (* src = "dec.v:1.25-1.26" *)
  input [10:0] o;
  (* src = "dec.v:1.80-1.82" *)
  output [2:0] op;
  (* src = "dec.v:1.103-1.107" *)
  output [1:0] wadr;
  (* src = "dec.v:1.116-1.118" *)
  output we;
  assign aradr = o[3:2];
  assign bradr = o[1:0];
  assign halt = o[10];
  assign op = o[6:4];
  assign wadr = o[8:7];
  assign we = o[9];
endmodule

(* src = "imem.v:1.1-41.10" *)
module imem(pc, o);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  (* src = "imem.v:1.43-1.44" *)
  output [10:0] o;
  (* src = "imem.v:1.25-1.27" *)
  input [5:0] pc;
  assign _005_ = ~(pc[1] & pc[0]);
  assign _006_ = ~(pc[2] & pc[3]);
  assign _007_ = ~(_006_ | _005_);
  assign _008_ = pc[4] & ~(pc[5]);
  assign _009_ = _008_ & _007_;
  assign _010_ = pc[1] | pc[0];
  assign _011_ = ~(_010_ | _006_);
  assign _012_ = _011_ & _008_;
  assign _013_ = _012_ | _009_;
  assign _014_ = pc[1] | ~(pc[0]);
  assign _015_ = pc[2] | ~(pc[3]);
  assign _016_ = ~(_015_ | _014_);
  assign _017_ = _016_ & _008_;
  assign _018_ = pc[0] | ~(pc[1]);
  assign _019_ = pc[3] | ~(pc[2]);
  assign _020_ = ~(_019_ | _018_);
  assign _021_ = _020_ & _008_;
  assign _022_ = _021_ | _017_;
  assign _023_ = _022_ | _013_;
  assign _024_ = pc[2] | pc[3];
  assign _025_ = ~(_024_ | _005_);
  assign _026_ = _025_ & _008_;
  assign _027_ = ~(_024_ | _010_);
  assign _028_ = _027_ & _008_;
  assign _029_ = _028_ | _026_;
  assign _030_ = _014_ | _006_;
  assign _031_ = ~(pc[5] | pc[4]);
  assign _032_ = _031_ & ~(_030_);
  assign _033_ = _018_ | _015_;
  assign _034_ = _031_ & ~(_033_);
  assign _035_ = _034_ | _032_;
  assign _036_ = _035_ | _029_;
  assign _037_ = _036_ | _023_;
  assign _038_ = _019_ | _005_;
  assign _039_ = _031_ & ~(_038_);
  assign _040_ = _019_ | _010_;
  assign _041_ = _031_ & ~(_040_);
  assign _042_ = _041_ | _039_;
  assign _043_ = _024_ | _014_;
  assign _044_ = _031_ & ~(_043_);
  assign _045_ = _044_ | _042_;
  assign _046_ = ~(_045_ | _037_);
  assign _047_ = pc[4] | ~(pc[5]);
  assign _048_ = _027_ & ~(_047_);
  assign _049_ = _046_ & ~(_048_);
  assign _050_ = _018_ | _006_;
  assign _051_ = _008_ & ~(_050_);
  assign _052_ = _015_ | _005_;
  assign _053_ = _008_ & ~(_052_);
  assign _054_ = _053_ | _051_;
  assign _055_ = _015_ | _010_;
  assign _056_ = _008_ & ~(_055_);
  assign _057_ = _019_ | _014_;
  assign _058_ = _008_ & ~(_057_);
  assign _059_ = _058_ | _056_;
  assign _060_ = _059_ | _054_;
  assign _061_ = _024_ | _018_;
  assign _062_ = _008_ & ~(_061_);
  assign _063_ = pc[5] | pc[4];
  assign _064_ = _007_ & ~(_063_);
  assign _065_ = _064_ | _062_;
  assign _066_ = _011_ & ~(_063_);
  assign _067_ = _016_ & ~(_063_);
  assign _068_ = _067_ | _066_;
  assign _069_ = _068_ | _065_;
  assign _070_ = _069_ | _060_;
  assign _071_ = _020_ & ~(_063_);
  assign _072_ = _025_ & ~(_063_);
  assign _073_ = _072_ | _071_;
  assign _074_ = _073_ | _070_;
  assign _075_ = _008_ & ~(_030_);
  assign _076_ = _008_ & ~(_033_);
  assign _077_ = _076_ | _075_;
  assign _078_ = _008_ & ~(_038_);
  assign _079_ = _008_ & ~(_040_);
  assign _080_ = _079_ | _078_;
  assign _081_ = _080_ | _077_;
  assign _082_ = _008_ & ~(_043_);
  assign _083_ = _031_ & ~(_050_);
  assign _084_ = _083_ | _082_;
  assign _085_ = _031_ & ~(_052_);
  assign _086_ = _031_ & ~(_055_);
  assign _087_ = _086_ | _085_;
  assign _088_ = _087_ | _084_;
  assign _089_ = _088_ | _081_;
  assign _090_ = _031_ & ~(_057_);
  assign _091_ = _031_ & ~(_061_);
  assign _000_ = _091_ | _090_;
  assign _001_ = _000_ | _089_;
  assign _002_ = _001_ | _074_;
  assign _003_ = _049_ & ~(_002_);
  assign o[8] = ~(_003_ | _046_);
  assign o[2] = _001_ & ~(_003_);
  assign o[7] = _074_ & ~(_003_);
  assign o[6] = _002_ & ~(_003_);
  assign _004_ = _046_ & ~(_002_);
  assign o[9] = ~(_004_ | _003_);
  assign o[10] = _048_ & ~(_003_);
  assign { o[5:3], o[1:0] } = { o[6], o[6], o[7], 1'h0, o[8] };
endmodule

(* src = "pc.v:1.1-7.10" *)
module pc(halt, pc, clk, rst);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  (* force_downto = 32'd1 *)
  (* src = "pc.v:5.20-5.26|/usr/local/bin/../share/yosys/techmap.v:270.23-270.24" *)
  wire [5:0] _05_;
  (* force_downto = 32'd1 *)
  (* src = "pc.v:5.20-5.26|/usr/local/bin/../share/yosys/techmap.v:270.26-270.27" *)
  wire [5:0] _06_;
  (* src = "pc.v:1.52-1.55" *)
  input clk;
  (* src = "pc.v:1.17-1.21" *)
  input halt;
  (* src = "pc.v:1.42-1.44" *)
  output [5:0] pc;
  reg [5:0] pc;
  (* src = "pc.v:1.57-1.60" *)
  input rst;
  assign _05_[0] = ~pc[0];
  assign _06_[1] = pc[1] ^ pc[0];
  assign _00_ = ~(pc[1] & pc[0]);
  assign _06_[2] = ~(_00_ ^ pc[2]);
  assign _01_ = pc[2] & ~(_00_);
  assign _06_[3] = _01_ ^ pc[3];
  assign _02_ = ~(pc[3] & pc[2]);
  assign _03_ = _02_ | _00_;
  assign _06_[4] = ~(_03_ ^ pc[4]);
  assign _04_ = pc[4] & ~(_03_);
  assign _06_[5] = _04_ ^ pc[5];
  (* src = "pc.v:2.2-6.6" *)
  always @(posedge clk, posedge rst)
    if (rst) pc[0] <= 1'h0;
    else if (!halt) pc[0] <= _05_[0];
  (* src = "pc.v:2.2-6.6" *)
  always @(posedge clk, posedge rst)
    if (rst) pc[1] <= 1'h0;
    else if (!halt) pc[1] <= _06_[1];
  (* src = "pc.v:2.2-6.6" *)
  always @(posedge clk, posedge rst)
    if (rst) pc[2] <= 1'h0;
    else if (!halt) pc[2] <= _06_[2];
  (* src = "pc.v:2.2-6.6" *)
  always @(posedge clk, posedge rst)
    if (rst) pc[3] <= 1'h0;
    else if (!halt) pc[3] <= _06_[3];
  (* src = "pc.v:2.2-6.6" *)
  always @(posedge clk, posedge rst)
    if (rst) pc[4] <= 1'h0;
    else if (!halt) pc[4] <= _06_[4];
  (* src = "pc.v:2.2-6.6" *)
  always @(posedge clk, posedge rst)
    if (rst) pc[5] <= 1'h0;
    else if (!halt) pc[5] <= _06_[5];
  assign _05_[5:1] = pc[5:1];
  assign _06_[0] = _05_[0];
endmodule

(* src = "rega.v:1.1-11.10" *)
module rega(arad, brad, outa, outb, en, wad, in, clk, rst);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  (* src = "rega.v:1.31-1.35" *)
  input [1:0] arad;
  (* src = "rega.v:1.37-1.41" *)
  input [1:0] brad;
  (* src = "rega.v:1.136-1.139" *)
  input clk;
  (* src = "rega.v:1.80-1.82" *)
  input en;
  (* src = "rega.v:1.126-1.128" *)
  input [15:0] in;
  (* src = "rega.v:1.62-1.66" *)
  output [15:0] outa;
  (* src = "rega.v:1.68-1.72" *)
  output [15:0] outb;
  reg [15:0] \regar[0] ;
  reg [15:0] \regar[1] ;
  reg [15:0] \regar[2] ;
  reg [15:0] \regar[3] ;
  (* src = "rega.v:1.141-1.144" *)
  input rst;
  (* src = "rega.v:1.102-1.105" *)
  input [1:0] wad;
  assign _021_ = brad[0] ? \regar[1] [0] : \regar[0] [0];
  assign _022_ = brad[0] ? \regar[3] [0] : \regar[2] [0];
  assign outb[0] = brad[1] ? _022_ : _021_;
  assign _023_ = brad[0] ? \regar[1] [1] : \regar[0] [1];
  assign _024_ = brad[0] ? \regar[3] [1] : \regar[2] [1];
  assign outb[1] = brad[1] ? _024_ : _023_;
  assign _025_ = brad[0] ? \regar[1] [2] : \regar[0] [2];
  assign _026_ = brad[0] ? \regar[3] [2] : \regar[2] [2];
  assign outb[2] = brad[1] ? _026_ : _025_;
  assign _027_ = brad[0] ? \regar[1] [3] : \regar[0] [3];
  assign _028_ = brad[0] ? \regar[3] [3] : \regar[2] [3];
  assign outb[3] = brad[1] ? _028_ : _027_;
  assign _029_ = brad[0] ? \regar[1] [4] : \regar[0] [4];
  assign _030_ = brad[0] ? \regar[3] [4] : \regar[2] [4];
  assign outb[4] = brad[1] ? _030_ : _029_;
  assign _031_ = brad[0] ? \regar[1] [5] : \regar[0] [5];
  assign _032_ = brad[0] ? \regar[3] [5] : \regar[2] [5];
  assign outb[5] = brad[1] ? _032_ : _031_;
  assign _033_ = brad[0] ? \regar[1] [6] : \regar[0] [6];
  assign _034_ = brad[0] ? \regar[3] [6] : \regar[2] [6];
  assign outb[6] = brad[1] ? _034_ : _033_;
  assign _035_ = brad[0] ? \regar[1] [7] : \regar[0] [7];
  assign _036_ = brad[0] ? \regar[3] [7] : \regar[2] [7];
  assign outb[7] = brad[1] ? _036_ : _035_;
  assign _037_ = brad[0] ? \regar[1] [8] : \regar[0] [8];
  assign _038_ = brad[0] ? \regar[3] [8] : \regar[2] [8];
  assign outb[8] = brad[1] ? _038_ : _037_;
  assign _039_ = brad[0] ? \regar[1] [9] : \regar[0] [9];
  assign _040_ = brad[0] ? \regar[3] [9] : \regar[2] [9];
  assign outb[9] = brad[1] ? _040_ : _039_;
  assign _041_ = brad[0] ? \regar[1] [10] : \regar[0] [10];
  assign _042_ = brad[0] ? \regar[3] [10] : \regar[2] [10];
  assign outb[10] = brad[1] ? _042_ : _041_;
  assign _043_ = brad[0] ? \regar[1] [11] : \regar[0] [11];
  assign _044_ = brad[0] ? \regar[3] [11] : \regar[2] [11];
  assign outb[11] = brad[1] ? _044_ : _043_;
  assign _045_ = brad[0] ? \regar[1] [12] : \regar[0] [12];
  assign _046_ = brad[0] ? \regar[3] [12] : \regar[2] [12];
  assign outb[12] = brad[1] ? _046_ : _045_;
  assign _047_ = brad[0] ? \regar[1] [13] : \regar[0] [13];
  assign _048_ = brad[0] ? \regar[3] [13] : \regar[2] [13];
  assign outb[13] = brad[1] ? _048_ : _047_;
  assign _049_ = brad[0] ? \regar[1] [14] : \regar[0] [14];
  assign _050_ = brad[0] ? \regar[3] [14] : \regar[2] [14];
  assign outb[14] = brad[1] ? _050_ : _049_;
  assign _051_ = brad[0] ? \regar[1] [15] : \regar[0] [15];
  assign _052_ = brad[0] ? \regar[3] [15] : \regar[2] [15];
  assign outb[15] = brad[1] ? _052_ : _051_;
  assign _053_ = rst | ~(en);
  assign _001_ = in[0] & ~(_053_);
  assign _008_ = in[1] & ~(_053_);
  assign _009_ = in[2] & ~(_053_);
  assign _010_ = in[3] & ~(_053_);
  assign _011_ = in[4] & ~(_053_);
  assign _012_ = in[5] & ~(_053_);
  assign _013_ = in[6] & ~(_053_);
  assign _014_ = in[7] & ~(_053_);
  assign _015_ = in[8] & ~(_053_);
  assign _016_ = in[9] & ~(_053_);
  assign _002_ = in[10] & ~(_053_);
  assign _003_ = in[11] & ~(_053_);
  assign _004_ = in[12] & ~(_053_);
  assign _005_ = in[13] & ~(_053_);
  assign _006_ = in[14] & ~(_053_);
  assign _007_ = in[15] & ~(_053_);
  assign _054_ = arad[0] ? \regar[1] [0] : \regar[0] [0];
  assign _055_ = arad[0] ? \regar[3] [0] : \regar[2] [0];
  assign outa[0] = arad[1] ? _055_ : _054_;
  assign _056_ = arad[0] ? \regar[1] [1] : \regar[0] [1];
  assign _057_ = arad[0] ? \regar[3] [1] : \regar[2] [1];
  assign outa[1] = arad[1] ? _057_ : _056_;
  assign _058_ = arad[0] ? \regar[1] [2] : \regar[0] [2];
  assign _059_ = arad[0] ? \regar[3] [2] : \regar[2] [2];
  assign outa[2] = arad[1] ? _059_ : _058_;
  assign _060_ = arad[0] ? \regar[1] [3] : \regar[0] [3];
  assign _061_ = arad[0] ? \regar[3] [3] : \regar[2] [3];
  assign outa[3] = arad[1] ? _061_ : _060_;
  assign _062_ = arad[0] ? \regar[1] [4] : \regar[0] [4];
  assign _063_ = arad[0] ? \regar[3] [4] : \regar[2] [4];
  assign outa[4] = arad[1] ? _063_ : _062_;
  assign _064_ = arad[0] ? \regar[1] [5] : \regar[0] [5];
  assign _065_ = arad[0] ? \regar[3] [5] : \regar[2] [5];
  assign outa[5] = arad[1] ? _065_ : _064_;
  assign _066_ = arad[0] ? \regar[1] [6] : \regar[0] [6];
  assign _067_ = arad[0] ? \regar[3] [6] : \regar[2] [6];
  assign outa[6] = arad[1] ? _067_ : _066_;
  assign _068_ = arad[0] ? \regar[1] [7] : \regar[0] [7];
  assign _069_ = arad[0] ? \regar[3] [7] : \regar[2] [7];
  assign outa[7] = arad[1] ? _069_ : _068_;
  assign _070_ = arad[0] ? \regar[1] [8] : \regar[0] [8];
  assign _071_ = arad[0] ? \regar[3] [8] : \regar[2] [8];
  assign outa[8] = arad[1] ? _071_ : _070_;
  assign _072_ = arad[0] ? \regar[1] [9] : \regar[0] [9];
  assign _073_ = arad[0] ? \regar[3] [9] : \regar[2] [9];
  assign outa[9] = arad[1] ? _073_ : _072_;
  assign _074_ = arad[0] ? \regar[1] [10] : \regar[0] [10];
  assign _075_ = arad[0] ? \regar[3] [10] : \regar[2] [10];
  assign outa[10] = arad[1] ? _075_ : _074_;
  assign _076_ = arad[0] ? \regar[1] [11] : \regar[0] [11];
  assign _077_ = arad[0] ? \regar[3] [11] : \regar[2] [11];
  assign outa[11] = arad[1] ? _077_ : _076_;
  assign _078_ = arad[0] ? \regar[1] [12] : \regar[0] [12];
  assign _079_ = arad[0] ? \regar[3] [12] : \regar[2] [12];
  assign outa[12] = arad[1] ? _079_ : _078_;
  assign _080_ = arad[0] ? \regar[1] [13] : \regar[0] [13];
  assign _081_ = arad[0] ? \regar[3] [13] : \regar[2] [13];
  assign outa[13] = arad[1] ? _081_ : _080_;
  assign _082_ = arad[0] ? \regar[1] [14] : \regar[0] [14];
  assign _083_ = arad[0] ? \regar[3] [14] : \regar[2] [14];
  assign outa[14] = arad[1] ? _083_ : _082_;
  assign _084_ = arad[0] ? \regar[1] [15] : \regar[0] [15];
  assign _085_ = arad[0] ? \regar[3] [15] : \regar[2] [15];
  assign outa[15] = arad[1] ? _085_ : _084_;
  assign _086_ = wad[0] & ~(_053_);
  assign _087_ = wad[1] & ~(_053_);
  assign _088_ = _087_ | _086_;
  assign _089_ = rst | en;
  assign _017_ = _089_ & ~(_088_);
  assign _090_ = en & ~(rst);
  assign _091_ = ~(_090_ & wad[0]);
  assign _092_ = _087_ | _091_;
  assign _018_ = _089_ & ~(_092_);
  assign _093_ = wad[1] | ~(wad[0]);
  assign _094_ = _090_ & ~(_093_);
  assign _000_ = rst & ~(_094_);
  assign _095_ = ~(_090_ & wad[1]);
  assign _096_ = _095_ | _086_;
  assign _019_ = _089_ & ~(_096_);
  assign _097_ = _095_ | _091_;
  assign _020_ = _089_ & ~(_097_);
  always @(posedge clk)
    if (_017_) \regar[0] [0] <= _001_;
  always @(posedge clk)
    if (_017_) \regar[0] [1] <= _008_;
  always @(posedge clk)
    if (_017_) \regar[0] [2] <= _009_;
  always @(posedge clk)
    if (_017_) \regar[0] [3] <= _010_;
  always @(posedge clk)
    if (_017_) \regar[0] [4] <= _011_;
  always @(posedge clk)
    if (_017_) \regar[0] [5] <= _012_;
  always @(posedge clk)
    if (_017_) \regar[0] [6] <= _013_;
  always @(posedge clk)
    if (_017_) \regar[0] [7] <= _014_;
  always @(posedge clk)
    if (_017_) \regar[0] [8] <= _015_;
  always @(posedge clk)
    if (_017_) \regar[0] [9] <= _016_;
  always @(posedge clk)
    if (_017_) \regar[0] [10] <= _002_;
  always @(posedge clk)
    if (_017_) \regar[0] [11] <= _003_;
  always @(posedge clk)
    if (_017_) \regar[0] [12] <= _004_;
  always @(posedge clk)
    if (_017_) \regar[0] [13] <= _005_;
  always @(posedge clk)
    if (_017_) \regar[0] [14] <= _006_;
  always @(posedge clk)
    if (_017_) \regar[0] [15] <= _007_;
  always @(posedge clk)
    if (_019_) \regar[2] [0] <= _001_;
  always @(posedge clk)
    if (_019_) \regar[2] [1] <= _008_;
  always @(posedge clk)
    if (_019_) \regar[2] [2] <= _009_;
  always @(posedge clk)
    if (_019_) \regar[2] [3] <= _010_;
  always @(posedge clk)
    if (_019_) \regar[2] [4] <= _011_;
  always @(posedge clk)
    if (_019_) \regar[2] [5] <= _012_;
  always @(posedge clk)
    if (_019_) \regar[2] [6] <= _013_;
  always @(posedge clk)
    if (_019_) \regar[2] [7] <= _014_;
  always @(posedge clk)
    if (_019_) \regar[2] [8] <= _015_;
  always @(posedge clk)
    if (_019_) \regar[2] [9] <= _016_;
  always @(posedge clk)
    if (_019_) \regar[2] [10] <= _002_;
  always @(posedge clk)
    if (_019_) \regar[2] [11] <= _003_;
  always @(posedge clk)
    if (_019_) \regar[2] [12] <= _004_;
  always @(posedge clk)
    if (_019_) \regar[2] [13] <= _005_;
  always @(posedge clk)
    if (_019_) \regar[2] [14] <= _006_;
  always @(posedge clk)
    if (_019_) \regar[2] [15] <= _007_;
  always @(posedge clk)
    if (_020_) \regar[3] [0] <= _001_;
  always @(posedge clk)
    if (_020_) \regar[3] [1] <= _008_;
  always @(posedge clk)
    if (_020_) \regar[3] [2] <= _009_;
  always @(posedge clk)
    if (_020_) \regar[3] [3] <= _010_;
  always @(posedge clk)
    if (_020_) \regar[3] [4] <= _011_;
  always @(posedge clk)
    if (_020_) \regar[3] [5] <= _012_;
  always @(posedge clk)
    if (_020_) \regar[3] [6] <= _013_;
  always @(posedge clk)
    if (_020_) \regar[3] [7] <= _014_;
  always @(posedge clk)
    if (_020_) \regar[3] [8] <= _015_;
  always @(posedge clk)
    if (_020_) \regar[3] [9] <= _016_;
  always @(posedge clk)
    if (_020_) \regar[3] [10] <= _002_;
  always @(posedge clk)
    if (_020_) \regar[3] [11] <= _003_;
  always @(posedge clk)
    if (_020_) \regar[3] [12] <= _004_;
  always @(posedge clk)
    if (_020_) \regar[3] [13] <= _005_;
  always @(posedge clk)
    if (_020_) \regar[3] [14] <= _006_;
  always @(posedge clk)
    if (_020_) \regar[3] [15] <= _007_;
  always @(posedge clk)
    if (_000_) \regar[1] [0] <= 1'h1;
    else if (_018_) \regar[1] [0] <= _001_;
  always @(posedge clk)
    if (_000_) \regar[1] [1] <= 1'h0;
    else if (_018_) \regar[1] [1] <= _008_;
  always @(posedge clk)
    if (_000_) \regar[1] [2] <= 1'h0;
    else if (_018_) \regar[1] [2] <= _009_;
  always @(posedge clk)
    if (_000_) \regar[1] [3] <= 1'h0;
    else if (_018_) \regar[1] [3] <= _010_;
  always @(posedge clk)
    if (_000_) \regar[1] [4] <= 1'h0;
    else if (_018_) \regar[1] [4] <= _011_;
  always @(posedge clk)
    if (_000_) \regar[1] [5] <= 1'h0;
    else if (_018_) \regar[1] [5] <= _012_;
  always @(posedge clk)
    if (_000_) \regar[1] [6] <= 1'h0;
    else if (_018_) \regar[1] [6] <= _013_;
  always @(posedge clk)
    if (_000_) \regar[1] [7] <= 1'h0;
    else if (_018_) \regar[1] [7] <= _014_;
  always @(posedge clk)
    if (_000_) \regar[1] [8] <= 1'h0;
    else if (_018_) \regar[1] [8] <= _015_;
  always @(posedge clk)
    if (_000_) \regar[1] [9] <= 1'h0;
    else if (_018_) \regar[1] [9] <= _016_;
  always @(posedge clk)
    if (_000_) \regar[1] [10] <= 1'h0;
    else if (_018_) \regar[1] [10] <= _002_;
  always @(posedge clk)
    if (_000_) \regar[1] [11] <= 1'h0;
    else if (_018_) \regar[1] [11] <= _003_;
  always @(posedge clk)
    if (_000_) \regar[1] [12] <= 1'h0;
    else if (_018_) \regar[1] [12] <= _004_;
  always @(posedge clk)
    if (_000_) \regar[1] [13] <= 1'h0;
    else if (_018_) \regar[1] [13] <= _005_;
  always @(posedge clk)
    if (_000_) \regar[1] [14] <= 1'h0;
    else if (_018_) \regar[1] [14] <= _006_;
  always @(posedge clk)
    if (_000_) \regar[1] [15] <= 1'h0;
    else if (_018_) \regar[1] [15] <= _007_;
endmodule

(* top =  1  *)
(* src = "top.v:1.1-12.10" *)
module top(we, wd, clk, rst);
  (* src = "top.v:2.15-2.16" *)
  wire [15:0] a;
  (* src = "top.v:3.14-3.18" *)
  wire [1:0] arad;
  (* src = "top.v:2.18-2.19" *)
  wire [15:0] b;
  (* src = "top.v:3.20-3.24" *)
  wire [1:0] brad;
  (* src = "top.v:1.53-1.56" *)
  input clk;
  (* src = "top.v:9.8-9.12" *)
  wire halt;
  (* src = "top.v:6.15-6.16" *)
  wire [10:0] o;
  (* src = "top.v:4.14-4.16" *)
  wire [2:0] op;
  (* src = "top.v:5.14-5.17" *)
  wire [5:0] pca;
  (* src = "top.v:1.58-1.61" *)
  input rst;
  (* src = "top.v:3.26-3.29" *)
  wire [1:0] wad;
  (* src = "top.v:1.43-1.45" *)
  output [15:0] wd;
  (* src = "top.v:1.19-1.21" *)
  output we;
  (* module_not_derived = 32'd1 *)
  (* src = "top.v:8.6-8.23" *)
  alu alu (
    .a(a),
    .b(b),
    .op(op),
    .result(wd)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "top.v:11.6-11.42" *)
  dec dec (
    .aradr(arad),
    .bradr(brad),
    .halt(halt),
    .o(o),
    .op(op),
    .wadr(wad),
    .we(we)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "top.v:10.7-10.19" *)
  imem imem (
    .o(o),
    .pc(pca)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "top.v:9.5-9.28" *)
  pc pc (
    .clk(clk),
    .halt(halt),
    .pc(pca),
    .rst(rst)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "top.v:7.7-7.52" *)
  rega rega (
    .arad(arad),
    .brad(brad),
    .clk(clk),
    .en(we),
    .in(wd),
    .outa(a),
    .outb(b),
    .rst(rst),
    .wad(wad)
  );
endmodule
